#!/usr/bin/env bash
set -e

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
  CREATE TABLE teams (
    id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name       varchar(60) NOT NULL,
    abbreviation         varchar(3) NOT NULL,
    CONSTRAINT unique_abbreviation UNIQUE(abbreviation)
  );

  CREATE TYPE ranking_type AS ENUM ('Power Ranking',
    'Strength of Schedule',
    'OLine Ranking',
    'DLine Ranking',
    'Secondary Ranking'
  );
  CREATE TABLE team_rankings (
    id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    team varchar(3) references teams(abbreviation) NOT NULL,
    "rankingType" ranking_type NOT NULL,
    rank integer NOT NULL,
    year integer NOT NULL,
    CONSTRAINT unique_team UNIQUE(team, "rankingType", year),
    CONSTRAINT unique_rank UNIQUE(rank, "rankingType", year),
    CONSTRAINT rank_range CHECK (rank > 0 AND rank < 33)
  );

  CREATE TYPE position_type AS ENUM ('QB','WR','T','DE','HB','TE','DT','LB','CB','S','G','C','P','FB','K','LS');
  CREATE TABLE players (
    id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100),
    age integer NOT NULL,
    "jerseyNumber" integer NOT NULL,
    height  integer NOT NULL,
    weight  integer NOT NULL,
    rating  integer NOT NULL,
    college varchar(50) NOT NULL,
    experience  integer NOT NULL,
    team varchar(3) references teams(abbreviation) NOT NULL,
    position position_type NOT NULL
  );

  CREATE TABLE schedule (
    id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    away varchar(3) references teams(abbreviation) NOT NULL,
    home varchar(3) references teams(abbreviation) NOT NULL,
    week integer NOT NULL,
    year integer NOT NULL,
    CONSTRAINT unique_home UNIQUE(home, week, year),
    CONSTRAINT unique_away UNIQUE(away, week, year),
    CONSTRAINT week_range CHECK (week > 0)
  );

  CREATE TYPE sync_data_names AS ENUM ('teams', 'schedules', 'rankings', 'players');
  CREATE TABLE sync (
    "dataName" sync_data_names NOT NULL,
    "hasSynced" boolean
  );

  INSERT INTO sync ("dataName", "hasSynced")
    VALUES ('teams', FALSE),
    ('schedules', FALSE),
    ('rankings', FALSE),
    ('players', FALSE);


EOSQL
